// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_space_x/test/repositories/history_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_space_x/services/api/api.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  @override
  _i3.Future<_i2.ApiResponse> post({
    required Uri? url,
    Map<String, String>? headers,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#post, [], {
              #url: url,
              #headers: headers,
              #body: body,
            }),
            returnValue: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#post, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#post, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.ApiResponse>);

  @override
  _i3.Future<_i2.ApiResponse> get({
    required Uri? url,
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#get, [], {#url: url, #headers: headers}),
            returnValue: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#get, [], {#url: url, #headers: headers}),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#get, [], {#url: url, #headers: headers}),
              ),
            ),
          )
          as _i3.Future<_i2.ApiResponse>);

  @override
  _i3.Future<_i2.ApiResponse> patch({
    required Uri? url,
    Map<String, String>? headers,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#patch, [], {
              #url: url,
              #headers: headers,
              #body: body,
            }),
            returnValue: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#patch, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#patch, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.ApiResponse>);

  @override
  _i3.Future<_i2.ApiResponse> put({
    required Uri? url,
    Map<String, String>? headers,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#put, [], {
              #url: url,
              #headers: headers,
              #body: body,
            }),
            returnValue: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#put, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#put, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.ApiResponse>);

  @override
  _i3.Future<_i2.ApiResponse> delete({
    required Uri? url,
    Map<String, String>? headers,
    required Map<String, dynamic>? body,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [], {
              #url: url,
              #headers: headers,
              #body: body,
            }),
            returnValue: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#delete, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
            returnValueForMissingStub: _i3.Future<_i2.ApiResponse>.value(
              _i4.dummyValue<_i2.ApiResponse>(
                this,
                Invocation.method(#delete, [], {
                  #url: url,
                  #headers: headers,
                  #body: body,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.ApiResponse>);
}
